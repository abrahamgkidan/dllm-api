{
	"info": {
		"_postman_id": "1944d8fa-dee6-497c-b70a-75d159d1c8aa",
		"name": "DllmApi",
		"description": "An API for querying an LLM.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22498959"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"    response = pm.response.json();",
							"    pm.environment.set(\"token\", response.data.token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"user-email@gmail.com\",\n    \"password\": \"#simple12345Password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"register"
					]
				},
				"description": "Regisrer a new user."
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    response = pm.response.json()",
							"    pm.environment.set(\"token\", response.token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"user-email@gmail.com\",\n    \"password\": \"#simple12345Password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				},
				"description": "Authenticate a user."
			},
			"response": []
		},
		{
			"name": "Chat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    responseData = pm.response.json();",
							"    pm.environment.set('chatId', responseData.id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{chatId}}\",\n    \"model\": \"mistral\",\n    \"query\": \"Holla! How do you do today?\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"chat"
					]
				},
				"description": "Do a chat query. Optional chat **id**, **model** name parameters can be provided.\n\nNote:\n\n- A model parameter can be provided but only (\"llama\" or \"mistral\")\n    \n- If given a chat id parameter the previous chat messages are added as part of the query (memorizing previous conversations)/"
			},
			"response": []
		},
		{
			"name": "List chats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"chat"
					]
				},
				"description": "Fetches a list of chat conversations for the given user."
			},
			"response": []
		},
		{
			"name": "Delete all chats",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"chat"
					]
				},
				"description": "Delete all chat conversations for the given user."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}